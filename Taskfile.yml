version: '3'

includes:
   autopatch:
      taskfile: ./src/Taskfile.yml
      dir: ./src
   fuzzing-service:
      taskfile: ./src/fuzzing-service/Taskfile.yml
      dir: ./src/fuzzing-service
   llm-dispatch:
      taskfile: ./src/llm-dispatch/Taskfile.yml
      dir: ./src/llm-dispatch
   autopatchdatatypes:
      taskfile: ./src/autopatchdatatypes/Taskfile.yml
      dir: ./src/autopatchdatatypes
   patch-evaluation-service:
      taskfile: ./src/patch-evaluation-service/Taskfile.yml
      dir: ./src/patch-evaluation-service
   autopatchpubsub:
      taskfile: ./src/autopatchpubsub/Taskfile.yml
      dir: ./src/autopatchpubsub
   autopatchshared:
      taskfile: ./src/autopatchshared/Taskfile.yml
      dir: ./src/autopatchshared

tasks:
   create-docker-network:
      desc: Create docker network
      cmds:
        - python3 assets/create-docker-network.py
   run:
      desc: Run AutoPatch-LLM
        - docker compose up
   install-devtools:
      desc: Install devtools
      cmds:
        - task: create-docker-network
        - task: autopatch:install-devtools
        - task: install-package-dependencies
   test-with-coverage:
      desc: Run tests with coverage
      cmds:
        - "echo 'Running tests with coverage...'"
        - pytest --junitxml=pytest.xml --cov=. --cov-report=xml
   test:
      desc: Run tests
      cmds:
        - "echo 'Running tests...'"
        - pytest
   lint:
      desc: Run linter
      cmds:
      - "echo 'Running linter...'"
      - "echo Not Yet Implemented"
   build-install-datatypes:
      desc: Build and install datatypes package
      cmds:
        - "echo 'Building datatypes...'"
        - task: autopatchdatatypes:build
        - task: autopatchdatatypes:install
        - cp ./src/autopatchdatatypes/dist/*.whl ./src/fuzzing-service # no private pacakge feeds yet
        - cp ./src/autopatchdatatypes/dist/*.whl ./src/patch-evaluation-service # no private pacakge feeds yet
   build-install-facades:
      desc: Build and install
      cmds:
        - "echo 'Building message broker facade...'"
        - task: autopatchpubsub:build
        - task: autopatchpubsub:install
        - cp ./src/autopatchpubsub/dist/*.whl ./src/fuzzing-service # no private pacakge feeds yet
        - cp ./src/autopatchpubsub/dist/*.whl ./src/patch-evaluation-service # no private pacakge feeds yet
   build-install-shared:
      desc: Build and install shared modules package
      cmds:
        - "echo 'Building shared modules...'"
        - task: autopatchshared:build
        - task: autopatchshared:install
        - cp ./src/autopatchshared/dist/*.whl ./src/fuzzing-service # no private pacakge feeds yet
        - cp ./src/autopatchshared/dist/*.whl ./src/patch-evaluation-service # no private pacakge feeds yet
   install-package-dependencies:
      desc: Install package dependencies
      cmds:
        - "echo 'Installing package dependencies...'"
        - task: build-install-datatypes
        - task: build-install-shared
        - task: build-install-facades
        - task: fuzzing-service:install
        - task: patch-evaluation-service:install
        # - task llm-dispatch:install
        # - task patch-request-generator-component:install
        # - task main:install
        # - task report-generaation:install
        # - task prompt-evaluation-service:install

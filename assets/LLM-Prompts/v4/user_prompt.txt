Your goal is to evaluate the following C code for low-level memory safety bugs, specifically Use-After-Free, Double Free, or Buffer Overflow vulnerabilities.

Identify and fix only real memory safety issues â€” do not fabricate vulnerabilities or make unrelated changes. If no such issue exists, return the original code unmodified.

Output only the resulting **full modified C program source code**, with all fixes applied. Do not include commentary, explanations, or formatting changes unrelated to the fixes. All code must remain syntactically correct and compile without warnings.

Important constraints:
- Only fix real memory safety bugs (e.g., Use-After-Free, Double Free, Buffer Overflow)
- Do not introduce stylistic or functional changes unrelated to memory safety
- Always return the full modified version of the program source code
- Use valid null terminators (e.g., `'\0'`), never empty character literals
- If no vulnerabilities are present, return the source exactly as given

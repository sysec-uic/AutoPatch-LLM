# .github/workflows/pre-release.yml
---
name: "pre-release"
run-name: "Pre Release by @${{ github.actor }}"

on:
  push:
    branches:
      - "main"

permissions:
  contents: write

env:
  PYTHON_VERSION: "3.12.3"

jobs:
  pre-release:
    name: "Pre Release"
    runs-on: "ubuntu-latest"
    steps:
      - name: Harden-Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: arduino/setup-task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: |
            .github
            src
            assets/input_codebase
            Taskfile.yml
      - name: Set up Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Upgrade pip 
        run: |
          python -m pip install --upgrade pip
      - name: Install build module
        run: |
          pip install build==1.2.2.post1
      - name: Install Test Harness dependencies
        run: |
          pip install pytest==8.3.4 pytest-cov==6.0.0 pytest-asyncio==0.25.3
      - name: Install test module
        run: |
          task install-package-dependencies
      - name: Create fuzzing component JSON config file
        run: |
          cat <<EOF > fuzzing-service-config.json
          {
              "version": "CItestonlyversion",
              "appname": "autopatch.fuzzing-service",
              "logging_config" : "${{ github.workspace }}/src/fuzzing-service/config/logging-config.json",
              "concurrency_threshold": 10,
              "message_broker_host": "mosquitto",
              "message_broker_port": 1883,
              "message_broker_protocol": "mqtt",
              "fuzz_svc_output_topic": "autopatch/crash_detail",
              "fuzz_svc_input_codebase_path": "${{ github.workspace }}/assets/input_codebase",
              "fuzz_svc_output_path": "${{ github.workspace }}/data/fuzz_svc_output",
              "compiler_warning_flags": "-Wall -Wextra -Wformat -Wshift-overflow -Wcast-align -Wstrict-overflow",
              "compiler_feature_flags": "-m32 -fno-stack-protector -O1 -fsanitize=address",
              "fuzzer_tool_name": "afl",
              "fuzzer_tool_timeout_seconds": 120,
              "fuzzer_tool_version": "2.52b",
              "afl_tool_full_path": "${{ github.workspace }}/bin/afl-2.52b/afl-fuzz",
              "afl_tool_seed_input_path": "${{ github.workspace }}/assets/seed_input",
              "afl_tool_output_path": "${{ github.workspace }}/src/fuzzing-service/data/afl_tool_output",
              "afl_tool_child_process_memory_limit_mb": 6000,
              "afl_tool_compiled_binary_executables_output_path": "${{ github.workspace }}/bin/executables_afl",
              "afl_compiler_tool_full_path": "${{ github.workspace }}/bin/afl-2.52b/afl-gcc",
              "iconv_tool_timeout": 120
          }
          EOF
      - name: Create patch evaluation component JSON config file
        run: |
          cat <<EOF > patch-evaluation-service-config.json
          {
              "version": "CItestonlyversion",
              "appname": "autopatch.patch-evaluation-service",
              "logging_config" : "${{ github.workspace }}/src/patch-evaluation-service/logging-config.json",
              "crashes_events":"${{ github.workspace }}/src/patch-evaluation-service/crash_events",
              "patch_eval_results":"${{ github.workspace }}/src/patch-evaluation-service/data",
              "patched_codes_path":"${{ github.workspace }}/src/patch-evaluation-service/patched_codes",
              "executables_path":"${{ github.workspace }}/src/patch-evaluation-service/bin/executables",
              "compiler_warning_flags":"-Wall -Wextra -Wformat -Wshift-overflow -Wcast-align -Wstrict-overflow -fstack-protector-strong",
              "temp_crashes_path":"${{ github.workspace }}src/patch-evaluation-service/temp_crashes_files",
              "compile_timeout":10,
              "run_timeout":10,
              "message_broker_host": "mosquitto",
              "message_broker_port": 1883,
              "autopatch_crash_detail_input_topic": "autopatch/crash_detail"
          }
          EOF
      - name: Verify Fuzzing Service Config JSON file
        run: |
          cat ${{ github.workspace }}/fuzzing-service-config.json
      - name: Verify Patch Evaluation Service Config JSON file
        run: |
          cat ${{ github.workspace }}/patch-evaluation-service-config.json
      - name: Run Tests
        env:
          FUZZ_SVC_CONFIG: ${{ github.workspace}}/fuzzing-service-config.json
          PATCH_EVAL_SVC_CONFIG: ${{ github.workspace}}/patch-evaluation-service-config.json
        run: |
          task test
      - name: Clean up temporary test config file
        run: |
          rm ${{ github.workspace }}/fuzzing-service-config.json
          rm ${{ github.workspace }}/patch-evaluation-service-config.json
      - name: Automatic Releases
        uses: marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0 # v1.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            ${{ github.workspace }}/src/autopatchdatatypes/dist/autopatchdatatypes-**-py3-none-any.whl
            ${{ github.workspace }}/src/autopatchdatatypes/dist/autopatchdatatypes-**.tar.gz
            ${{ github.workspace }}/src/autopatchshared/dist/autopatchshared-**-py3-none-any.whl
            ${{ github.workspace }}/src/autopatchshared/dist/autopatchshared-**.tar.gz
            ${{ github.workspace }}/src/autopatchpubsub/dist/autopatchpubsub-**-py3-none-any.whl
            ${{ github.workspace }}/src/autopatchpubsub/dist/autopatchpubsub-**.tar.gz

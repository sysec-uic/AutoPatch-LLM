---
# .github/workflows/test-coverage.yml
name: Test & Coverage
run-name: Test & Coverage by @${{ github.actor }}

on:
  workflow_dispatch:  
  push:
    branches:
      - 'feature/CI-test-coverage'
  pull_request:
    branches:
      - main
    paths:
      - 'src/**'
      - 'tests/**'

permissions:
  contents: write
  checks: write
  pull-requests: write
env:
  PYTHON_VERSION: '3.12.3'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Harden-Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: arduino/setup-task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: |
            .github
            src
            assets/input_codebase
            pyproject.toml
            Taskfile.yml
      - name: Set up Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install build module
        run: |
          python -m pip install --upgrade pip
          pip install build==1.2.2.post1
      - name: Install Package Dependencies
        run: |
          task install-package-dependencies
      - name: Install Test Harness dependencies
        run: |
          pip install pytest==8.3.4 pytest-cov==6.0.0
      - name: Create JSON config file
        run: |
          cat <<EOF > config.json
          {
              "version": "0.2.0",
              "appname": "autopatch.fuzzing-service",
              "logging_config" : "${{ github.workspace }}/src/fuzzing-service/config/logging-config.json",
              "concurrency_threshold": 10,
              "message_broker_host": "mosquitto",
              "message_broker_port": 1883,
              "message_broker_protocol": "mqtt",
              "fuzz_svc_output_topic": "autopatch/crash_detail",
              "fuzz_svc_input_codebase_path": "${{ github.workspace }}/assets/input_codebase",
              "fuzz_svc_output_path": "${{ github.workspace }}/data/fuzz_svc_output",
              "compiler_warning_flags": "-Wall -Wextra -Wformat -Wshift-overflow -Wcast-align -Wstrict-overflow",
              "compiler_feature_flags": "-m32 -fno-stack-protector -O1 -fsanitize=address",
              "fuzzer_tool_name": "afl",
              "fuzzer_tool_timeout_seconds": 120,
              "fuzzer_tool_version": "2.52b",
              "afl_tool_full_path": "${{ github.workspace }}/bin/afl-2.52b/afl-fuzz",
              "afl_tool_seed_input_path": "${{ github.workspace }}/assets/seed_input",
              "afl_tool_output_path": "${{ github.workspace }}/src/fuzzing-service/data/afl_tool_output",
              "afl_tool_child_process_memory_limit_mb": 6000,
              "afl_tool_compiled_binary_executables_output_path": "${{ github.workspace }}/bin/executables_afl",
              "afl_compiler_tool_full_path": "${{ github.workspace }}/bin/afl-2.52b/afl-gcc",
              "iconv_tool_timeout": 120
          }
          EOF
      - name: Verify JSON file
        run: cat config.json
      - name: Run tests with coverage
        env:
          FUZZ_SVC_CONFIG: ${{ github.workspace}}/config.json
        run: |
          task test-with-coverage
      - name: Publish coverage report
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: coverage-report
          path: coverage.xml
      - name: Pytest Coverage Comment
        uses: MishaKav/pytest-coverage-comment@81882822c5b22af01f91bd3eacb1cefb6ad73dc2 # v1.1.53
        with:
          pytest-xml-coverage-path: ./coverage.xml
          junitxml-path: ./pytest.xml

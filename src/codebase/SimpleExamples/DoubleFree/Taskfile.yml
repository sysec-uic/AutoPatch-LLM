version: '3'

tasks:
  build:
    desc: Build all of the double free examples
    deps: [build-ex1, build-ex2, build-ex3]

  build-ex3:
    desc: Compile the C program
    cmds:
      - gcc -Wall -Wextra -o double_free_ex_3 double_free_example_3.c
    sources:
      - double_free_example_3.c
    generates:
      - double_free_ex_3
  run-ex3:
    desc: Run the second double_free compiled program
    vars:
      ARGUMENT: "test"  # Default argument; replace with an actual input when running
    cmds:
      - ./double_free_ex_3 "{{.ARGUMENT}}"
    preconditions:
      - sh: '[ -f double_free_ex_3 ]'
  build-ex2:
    desc: Compile the C program
    cmds:
      - gcc -Wall -Wextra -o double_free_ex_2 double_free_example_2.c
    sources:
      - double_free_example_2.c
    generates:
      - double_free_ex_2
  run-ex2:
    desc: Run the second double_free compiled program
    vars:
      ARGUMENT: "test"  # Default argument; replace with an actual input when running
    cmds:
      - ./double_free_ex_2 "{{.ARGUMENT}}"
    preconditions:
      - sh: '[ -f double_free_ex_2 ]'

  build-ex1:
    desc: Compile the C program
    cmds:
      - gcc -Wall -Wextra -o double_free_ex_1 double_free_example_1.c
    sources:
      - double_free_example_1.c
    generates:
      - double_free_ex_1
  run-ex1:
    desc: Run the first double_free compiled program
    cmds:
      - ./double_free_ex_1
    preconditions:
      - sh: '[ -f double_free_ex_1 ]'

  clean:
    desc: Clean up build artifacts
    cmds:
      - rm -f double_free_ex_1
      - rm -f double_free_ex_2
      - rm -f double_free_ex_3
    silent: true
